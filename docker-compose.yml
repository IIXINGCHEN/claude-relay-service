version: '3.8'

# 🐳 Claude Relay Service - Unified Docker Compose Configuration
# Supports both standard and accelerated deployments
# Set DOCKER_REGISTRY env var for custom image registries

services:
  # 🚀 Claude Relay Service
  claude-relay:
    image: ${DOCKER_IMAGE:-claude-relay-service:local}
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_IMAGE_REGISTRY: ${NODE_IMAGE_REGISTRY:-}
        NPM_REGISTRY: ${NPM_REGISTRY:-https://registry.npmmirror.com}
    ports:
      - "${BIND_HOST:-0.0.0.0}:${PORT:-13006}:3000"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    # 🎯 资源限制（防止容器占用过多资源）
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0

      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_ENABLE_TLS=${REDIS_ENABLE_TLS:-}
      - REDIS_TLS_NOT_REQUIRED=${REDIS_TLS_NOT_REQUIRED:-}

      # ⚠️ CRITICAL: These MUST be set in .env file - DO NOT hardcode!
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - WEB_SESSION_SECRET=${WEB_SESSION_SECRET:-}
      - ADMIN_SESSION_TIMEOUT=${ADMIN_SESSION_TIMEOUT:-86400000}
      - API_KEY_PREFIX=${API_KEY_PREFIX:-cr_}

      - ADMIN_USERNAME=${ADMIN_USERNAME:-}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-}

      # 优化: 从10分钟降至2分钟，提升响应速度
      - DEFAULT_PROXY_TIMEOUT=${DEFAULT_PROXY_TIMEOUT:-120000}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-120000}
      - MAX_PROXY_RETRIES=${MAX_PROXY_RETRIES:-3}

      - DEFAULT_TOKEN_LIMIT=${DEFAULT_TOKEN_LIMIT:-1000000}

      # 优化: 生产环境使用warn级别减少I/O开销
      - LOG_LEVEL=${LOG_LEVEL:-warn}
      - LOG_MAX_SIZE=${LOG_MAX_SIZE:-10m}
      - LOG_MAX_FILES=${LOG_MAX_FILES:-5}

      # 优化: 从1小时降至30分钟，避免内存累积
      - CLEANUP_INTERVAL=${CLEANUP_INTERVAL:-1800000}
      - TOKEN_USAGE_RETENTION=${TOKEN_USAGE_RETENTION:-2592000000}
      - HEALTH_CHECK_INTERVAL=${HEALTH_CHECK_INTERVAL:-60000}
      - TIMEZONE_OFFSET=${TIMEZONE_OFFSET:-8}

      - DEBUG=${DEBUG:-false}
      - ENABLE_CORS=${ENABLE_CORS:-true}
      - TRUST_PROXY=${TRUST_PROXY:-true}

       # 🎯 Claude API 配置
      - CLAUDE_API_URL=${CLAUDE_API_URL:-https://api.anthropic.com/v1/messages}
      - CLAUDE_API_VERSION=${CLAUDE_API_VERSION:-2023-06-01}
      - CLAUDE_BETA_HEADER=${CLAUDE_BETA_HEADER:-claude-code-20250219,oauth-2025-04-20,interleaved-thinking-2025-05-14,fine-grained-tool-streaming-2025-05-14}
      
    depends_on:
      - redis
    networks:
      - claude-relay-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s

  # 📊 Redis Database
  redis:
    image: ${REDIS_IMAGE:-redis:7-alpine}
    restart: unless-stopped
    expose:
      - "6379"
    volumes:
      - ./redis_data:/data
    # 🎯 Redis资源限制
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    # 优化持久化策略：减少磁盘I/O，提升性能
    # save 900 1: 15分钟内至少1个key变化则保存
    # save 300 10: 5分钟内至少10个key变化则保存  
    # save 60 10000: 1分钟内至少10000个key变化则保存
    # appendfsync everysec: 每秒同步AOF，平衡性能和安全性
    # maxmemory-policy: 内存满时移除带过期时间的key(LRU)
    command: >
      redis-server
      --save 900 1
      --save 300 10
      --save 60 10000
      --appendonly yes
      --appendfsync everysec
      --maxmemory 384mb
      --maxmemory-policy allkeys-lru
      --tcp-backlog 511
      --timeout 300
      --tcp-keepalive 60
    networks:
      - claude-relay-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  claude-relay-network:
    driver: bridge
